#在没有给定初始值的情况下，就可以让一个数一个数来试
#直到试出符合要求的数字
# 方法一:正推法 公式：n2=(n1-1)*4/5 因为是整数，所以（n1-1）/5必须是整数
n=1
while True:
    num=n  #n是桃子总数
    for j in range(1,6):
        # 按照题意剩余桃子数量减去一个后必然要可以整除5（丢一个平均分5份）
        if (num-1)%5==0:
            #剩余桃子数量
            num = (num - 1) * 4 // 5
        else:
            n+=4
            break
    else:
        #当没有从break中结束循环时，则执行else语句
        #说明的n符合提议（能够丢一个分5份，分5次）
        print('海滩上原来最少一共有%s个桃子'%n)
        break


# 方法二：逆推法 公式：n1=(n2/4)*5+1 是整数，所以n2/4必须是整数
#x是第后一次总的桃子数量，然后往前推
j=1
while True:
    x=j*4 #乘以4是因为知道桃子总数一定是4的倍数，减少循环次数，不乘以4也可以，就是循环多一些数
    for i in range(5):
        #每次分的桃子总数一定可以整除4，因为(n2/4)==(n1-1)/5
        if (x%4!=0):
            j += 1
            break
        else:
            x = (x // 4) * 5 + 1  # 计算上一只猴子总的桃子数量
    else:
        #当5次循环都走了一遍说明桃子数量符合题意
        break
print('海滩上原来最少一共有%s个桃子'%x)
